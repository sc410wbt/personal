{"version":3,"sources":["Environment.module.sass","components/Header.module.sass","components/Header.js","Environment.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","s","wrapper","camera","controls","scene","THREE","renderer","antialias","fov","window","innerWidth","Environment","a","cubeGeometry","cubeMaterial","color","cube","add","mtlLoader","MTLLoader","loadAsync","materials","console","log","loader","OBJLoader","setMaterials","load","object","scale","set","position","rotation","y","Math","PI","children","animate","TWEEN","render","requestAnimationFrame","useEffect","appWrapper","document","querySelector","webgl","length","appendChild","domElement","innerHeight","setClearColor","setPixelRatio","setSize","shadowMap","enabled","type","OrbitControls","enableZoom","enableDamping","dampingFactor","populate","ambientLight","dLight","light","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,MAAQ,6B,mBCA1BD,EAAOC,QAAU,CAAC,QAAU,0B,6JCGb,SAASC,IAEvB,OACC,qBAAKC,UAAWC,IAAEC,QAAlB,SACC,6B,ICICC,EACAC,E,wFAHEC,EAAQ,IAAIC,KACZC,EAAW,IAAID,KAAqB,CAAEE,WAAW,IAqBnDC,GAlBc,IAAIH,KACR,IAAIA,KAiBPI,OAAOC,WAAa,IAAO,GAAK,IAG5B,SAASC,IAAc,4CA8BrC,sCAAAC,EAAA,6DACKC,EAAe,IAAIR,IAAwB,EAAG,EAAG,GACjDS,EAAe,IAAIT,IAA2B,CAAEU,MAAO,UACvDC,EAAO,IAAIX,IAAWQ,EAAcC,GACxCV,EAAMa,IAAID,GAEI,2BACVE,EAAY,IAAIC,IAPrB,SAQuBD,EAAUE,UAFlB,4BANf,OAQKC,EARL,OASCC,QAAQC,IAAI,YAAaF,IAGrBG,EAAS,IAAIC,KACVC,aAAaL,GAER,4BACZG,EAAOG,KADK,6BACO,SAACC,GACnBA,EAAOC,MAAMC,IAAI,IAAK,IAAK,KAC3BF,EAAOG,SAASD,IAAI,GAAI,GAAI,GAC5BF,EAAOI,SAASC,EAAIC,KAAKC,GAAK,GAC9Bb,QAAQC,IAAI,SAAUK,EAAOQ,UAC7BhC,EAAMa,IAAIW,MACR,WACFN,QAAQC,IAAI,YAvBd,6CA9BqC,sBAuFrC,SAASc,IAERjC,EAAM4B,SAASC,GAAK,KAEpBK,WACAhC,EAASiC,OAAOnC,EAAOF,GACvBsC,sBAAsBH,GAGvB,OA9FAI,qBAAU,WAET,IAAMC,EAAaC,SAASC,cAAc,IAAM5C,IAAE6C,OAClDvB,QAAQC,IAAImB,GACRA,EAAWN,SAASU,QAAU,GAAGJ,EAAWK,YAAYzC,EAAS0C,aAErE9C,EAAS,IAAIG,IAAwBG,EAAKC,OAAOC,WAAWD,OAAOwC,YAAa,GAAK,MAC9ElB,SAASD,IAAI,EAAE,EAXV,IAYZxB,EAAS4C,cAAc,SAAU,GACjC5C,EAAS6C,cAAc,KACvB7C,EAAS8C,QAAQ3C,OAAOC,WAAYD,OAAOwC,aAC3C3C,EAAS+C,UAAUC,SAAU,EAC7BhD,EAAS+C,UAAUE,KAAOlD,KAE1BF,EAAW,IAAIqD,IAActD,EAAQI,EAAS0C,aACrCS,YAAa,EACtBtD,EAASuD,eAAgB,EACzBvD,EAASwD,cAAgB,IAnBW,mCAsBpCC,GAwDD,WACC,IAAIC,EAAe,IAAIxD,IAAmB,SAAU,IACpDD,EAAMa,IAAI4C,GAEV,IAAIC,EAAS,IAAIzD,IAAuB,SAAU,IAClDyD,EAAO/B,SAASD,IAAI,EAAG,EAAG,GAC1B1B,EAAMa,IAAI6C,GA7DVC,GACA1B,MAEE,IAuEF,8BACC,qBAAKtC,UAAWC,IAAE6C,UCxHNmB,MATf,WACI,OACI,sBAAKjE,UAAU,MAAf,UACI,cAACD,EAAD,IACA,cAACa,EAAD,QCIGsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASnC,OACP,cAAC,IAAMoC,WAAP,UACE,cAAC,EAAD,MAEFhC,SAASiC,eAAe,SAM1BX,M","file":"static/js/main.0a7f285c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"webgl\":\"Environment_webgl__3i5nb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3dFlQ\"};","import React from 'react'\n\nimport s from './Header.module.sass'\n\nexport default function Header() {\n\n\treturn (\n\t\t<div className={s.wrapper}>\n\t\t\t<header>\n\t\t\t\t{}\n\t\t\t</header>\n\t\t</div>\n\t)\n}\n","import React, {useEffect} from 'react'\nimport * as THREE from 'three'\nimport * as TWEEN from 'tween'\nimport {GLTFLoader} from \"three/examples/jsm/loaders/GLTFLoader\"\nimport {OBJLoader} from \"three/examples/jsm/loaders/OBJLoader\"\nimport {MTLLoader} from \"three/examples/jsm/loaders/MTLLoader\"\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\"\n\nimport s from './Environment.module.sass'\n\nconst scene = new THREE.Scene()\nconst renderer = new THREE.WebGLRenderer( { antialias: true })\nlet camera\nlet controls\nconst raycaster = new THREE.Raycaster()\nconst mouse = new THREE.Vector2()\n\nlet pauseAnimation = false\nlet clickable = []\nlet lights = {}\nlet videos = []\nlet categoryVideo\nlet roomSelected = false\n\nlet dragTimer\nlet azimuthalAngle // side to side\nlet polarAngle // up, down\nlet dragging = false\n\nlet frames = 0\nlet frameTimer\n\nlet fov = (window.innerWidth < 760) ? 60 : 45\nlet cameraZ = 10\n\nexport default function Environment() {\n\n\tuseEffect(() => {\n\n\t\tconst appWrapper = document.querySelector('.' + s.webgl)\n\t\tconsole.log(appWrapper)\n\t\tif (appWrapper.children.length <= 0) appWrapper.appendChild(renderer.domElement)\n\n\t\tcamera = new THREE.PerspectiveCamera(fov, window.innerWidth/window.innerHeight, 0.1, 300)\n\t\tcamera.position.set(0,0, cameraZ)\n\t\trenderer.setClearColor(0xFFFFFF, 1)\n\t\trenderer.setPixelRatio(1.5) //window.devicePixelRatio)\n\t\trenderer.setSize(window.innerWidth, window.innerHeight)\n\t\trenderer.shadowMap.enabled = true\n\t\trenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\n\t\tcontrols = new OrbitControls(camera, renderer.domElement)\n\t\tcontrols.enableZoom = true\n\t\tcontrols.enableDamping = true\n\t\tcontrols.dampingFactor = 0.12\n\t\t// controls.rotateSpeed *= 0.4\n\n\t\tpopulate()\n\t\tlight()\n\t\tanimate()\n\n\t}, [])\n\n\n\n\tasync function populate() {\n\t\tlet cubeGeometry = new THREE.BoxBufferGeometry(1, 1, 1)\n\t\tlet cubeMaterial = new THREE.MeshPhysicalMaterial({ color: 0x888888 })\n\t\tlet cube = new THREE.Mesh(cubeGeometry, cubeMaterial)\n\t\tscene.add(cube)\n\n\t\tlet mtlFile = '/models/cartier_room.mtl'\n\t\tlet mtlLoader = new MTLLoader()\n\t\tlet materials = await mtlLoader.loadAsync(mtlFile)\n\t\tconsole.log('materials', materials)\n\n\n\t\tlet loader = new OBJLoader()\n\t\tloader.setMaterials(materials)\n\n\t\tlet model = './models/cartier_room.obj'\n\t\tloader.load(model, (object) => {\n\t\t\tobject.scale.set(0.01,0.01,0.01)\n\t\t\tobject.position.set(0, -20, 0)\n\t\t\tobject.rotation.y = Math.PI / 12\n\t\t\tconsole.log('loaded', object.children)\n\t\t\tscene.add(object)\n\t\t}, () => {\n\t\t\tconsole.log('error')\n\t\t})\n\n\t\t// let loader = new GLTFLoader()\n\t\t//\n\t\t// loader.load(\n\t\t// \t'models/gears/scene.gltf',\n\t\t// \t(object) => {\n\t\t// \t\t// let scale = 0.7;\n\t\t// \t\t// object.scene.position.set(11, 0.2, 23);\n\t\t// \t\t// object.scene.scale.set(gearScale, gearScale, gearScale);\n\t\t// \t\t// object.scene.traverse( function( child ) {\n\t\t// \t\t// \tif ( child.isMesh ) {\n\t\t// \t\t// \t\tchild.castShadow = true;\n\t\t// \t\t// \t\tchild.receiveShadow = true;\n\t\t// \t\t// \t\tchild.material.metalness = 0.5;\n\t\t// \t\t// \t\t// child.material.roughness = 0.5;\n\t\t// \t\t// \t}\n\t\t// \t\t// } );\n\t\t// \t\t// object.scene.rotation.set(0, Math.PI / 3, 0);\n\t\t// \t\t// scene.add(object.scene)\n\t\t// \t}\n\t\t// )\n\t}\n\n\tfunction light() {\n\t\tlet ambientLight = new THREE.AmbientLight(0xFFFFFF, 0.5)\n\t\tscene.add(ambientLight)\n\n\t\tlet dLight = new THREE.DirectionalLight(0xFFFFFF, 0.5)\n\t\tdLight.position.set(3, 2, 3)\n\t\tscene.add(dLight)\n\t}\n\n\tfunction animate() {\n\t\tframes++\n\t\tscene.rotation.y += 0.001\n\n\t\tTWEEN.update()\n\t\trenderer.render(scene, camera)\n\t\trequestAnimationFrame(animate)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className={s.webgl} />\n\t\t</div>\n\t)\n\n}\n","import './App.css'\nimport Header from \"./components/Header\"\nimport Environment from \"./Environment\"\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <Environment />\n        </div>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}